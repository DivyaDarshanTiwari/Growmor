generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  email    String @unique
  password String
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  googleId  String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cart      Cart?
  orders    Order[]
  reviews   Review[]
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String
  plants      Plant[]
  products    Product[]
}

model Discount {
  id       Int       @id @default(autoincrement())
  percent  Float
  startsAt DateTime
  endsAt   DateTime
  products Product[]
}

model Review {
  id        Int      @id @default(autoincrement())
  rating    Int
  comment   String?
  productId Int
  userId    Int
  createdAt DateTime @default(now())
  plantId   Int?
  plant     Plant?   @relation(fields: [plantId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Order {
  id         Int         @id @default(autoincrement())
  userId     Int
  paymentId  String
  status     String      @default("pending")
  createdAt  DateTime    @default(now())
  address    Address?
  user       User        @relation(fields: [userId], references: [id])
  orderItems OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  productId Int
  orderId   Int
  quantity  Int
  price     Float
  plantId   Int?
  order     Order   @relation(fields: [orderId], references: [id])
  plant     Plant?  @relation(fields: [plantId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Address {
  id       Int    @id @default(autoincrement())
  orderId  Int    @unique
  fullName String
  phone    String
  street   String
  city     String
  state    String
  postal   String
  country  String
  order    Order  @relation(fields: [orderId], references: [id])
}

model ViewLog {
  id        Int      @id @default(autoincrement())
  productId Int
  ip        String
  viewedAt  DateTime @default(now())
  plantId   Int?
  plant     Plant?   @relation(fields: [plantId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model Blog {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  imageUrl  String
  createdAt DateTime @default(now())
}

model Plant {
  id                 Int         @id @default(autoincrement())
  name               String
  description        String
  price              Float
  imageUrl           String?
  categoryId         Int
  discountPercentage Float       @default(0)
  isTrending         Boolean     @default(false)
  isBestSeller       Boolean     @default(false)
  createdAt          DateTime    @default(now())
  cartItems          CartItem[]
  orderItems         OrderItem[]
  category           Category    @relation(fields: [categoryId], references: [id])
  reviews            Review[]
  viewLogs           ViewLog[]
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  price       Float
  imageUrl    String
  categoryId  Int
  discountId  Int?
  createdAt   DateTime    @default(now())
  cartItems   CartItem[]
  orderItems  OrderItem[]
  category    Category    @relation(fields: [categoryId], references: [id])
  discount    Discount?   @relation(fields: [discountId], references: [id])
  reviews     Review[]
  viewLogs    ViewLog[]
}

model Cart {
  id        Int        @id @default(autoincrement())
  userId    Int        @unique
  createdAt DateTime   @default(now())
  user      User       @relation(fields: [userId], references: [id])
  items     CartItem[] // One cart can have many items
}

model CartItem {
  id        Int  @id @default(autoincrement())
  cartId    Int
  plantId   Int?
  productId Int?
  quantity  Int  @default(1)

  cart    Cart     @relation(fields: [cartId], references: [id])
  plant   Plant?   @relation(fields: [plantId], references: [id])
  product Product? @relation(fields: [productId], references: [id])
}
